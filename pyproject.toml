[tool.poetry]
name = "report-problem"
version = "1.0.0"
description = ""
authors = [
  "Jo√£o Paulo Ramos Nogueira <jprnogueira@yahoo.com.br>",
]

[tool.poetry.dependencies]
python = "~3.10"
fastapi = "^0.85.0"
uvicorn = "^0.18.3"
pydantic = {extras = ["email"], version = "^1.10.8"}
google-cloud-firestore = "^2.7.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.1.3"
flake8 = "^4.0.1"
pytest-asyncio = "^0.19.0"
isort = "^5.10.1"
blue = "^0.9.1"
pre-commit = "^2.20.0"
httpx = "^0.23.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
lint.select = ["E", "F"]
lint.ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
lint.fixable = ["ALL"]
lint.unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
lint.per-file-ignores = {}

# Same as Black.
line-length = 120

# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.blue]
line-length = 120
